<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:GUI.Converters"
    xmlns:local="clr-namespace:GUI.Controls">

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="pack://application:,,,/Fonts/#SketchFlow Print" />
    </Style>

    <Style x:Key="introTitleStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize" Value="128" />
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style x:Key="introButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="32" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Margin" Value="10" />
        <Setter Property="Width" Value="200" />
    </Style>
    
    <Style x:Key="libraryButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border" CornerRadius="10" Margin="5" Width="200" Height="200" Background="Gray">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.Setters>
                                <Setter TargetName="border" Property="Background" Value="#AAAAFF" />
                            </Trigger.Setters>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="highlightCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Border Name="border" Background="Black" BorderBrush="Gray" BorderThickness="1" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter Content="{TemplateBinding Content}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#888888" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style x:Key="slidingCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Style.Setters>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Border BorderThickness="1" Background="Transparent">
                            <StackPanel Orientation="Horizontal">
                                <Canvas Width="50" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center">
                                    <Rectangle Name="leftRectangle" Canvas.Left="10" Canvas.Top="5" Height="10" Width="0" Fill="White" />
                                    <Rectangle Name="rightRectangle" Canvas.Right="10" Canvas.Top="5" Height="10" Width="30" Fill="Gray" />
                                    <Ellipse Name="ellipse" Canvas.Left="0" Canvas.Top="0" Height="20" Width="20">
                                        <Ellipse.Fill>
                                            <RadialGradientBrush GradientOrigin=".25,.25">
                                                <GradientStop Color="White" Offset="0" />
                                                <GradientStop Color="Gray" Offset="1" />
                                            </RadialGradientBrush>
                                        </Ellipse.Fill>
                                    </Ellipse>
                                </Canvas>
                                <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center" />
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="leftRectangle" Storyboard.TargetProperty="Width" To="30" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="rightRectangle" Storyboard.TargetProperty="Width" To="0" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Canvas.Left)" To="30" Duration="0:0:0.125" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="leftRectangle" Storyboard.TargetProperty="Width" To="0" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="rightRectangle" Storyboard.TargetProperty="Width" To="30" Duration="0:0:0.125" />
                                            <DoubleAnimation Storyboard.TargetName="ellipse" Storyboard.TargetProperty="(Canvas.Left)" To="0" Duration="0:0:0.125" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style x:Key="buttonStyle" TargetType="{x:Type Button}">
        <Setter Property="Padding" Value="5" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="ellipse" Width="96" Height="96">
                            <Ellipse.Fill>
                                <Binding RelativeSource="{RelativeSource Self}" Path="IsMouseOver">
                                    <Binding.Converter>
                                        <converters:BoolConverter>
                                            <converters:BoolConverter.True>
                                                <SolidColorBrush Color="Gray" />
                                            </converters:BoolConverter.True>
                                            <converters:BoolConverter.False>
                                                <SolidColorBrush Color="Black" />
                                            </converters:BoolConverter.False>
                                        </converters:BoolConverter>
                                    </Binding.Converter>
                                </Binding>
                            </Ellipse.Fill>
                        </Ellipse>
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" IsHitTestVisible="False" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ellipse" Property="Fill" Value="#FF7777" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="filterButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Padding" Value="5" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Content">
            <Setter.Value>
                <Image Source="pack://application:,,,/Icons/filter.png" Stretch="None" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Ellipse HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="ellipse" Width="96" Height="96">
                            <Ellipse.Fill>
                                <Binding RelativeSource="{RelativeSource Self}" Path="IsMouseOver">
                                    <Binding.Converter>
                                        <converters:BoolConverter>
                                            <converters:BoolConverter.True>
                                                <SolidColorBrush Color="Gray" />
                                            </converters:BoolConverter.True>
                                            <converters:BoolConverter.False>
                                                <SolidColorBrush Color="Black" />
                                            </converters:BoolConverter.False>
                                        </converters:BoolConverter>
                                    </Binding.Converter>
                                </Binding>
                            </Ellipse.Fill>
                        </Ellipse>
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" IsHitTestVisible="False" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ellipse" Property="Fill" Value="#FF7777" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ellipse" Property="Fill" Value="#7777FF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="backButtonStyle" BasedOn="{StaticResource buttonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Content">
            <Setter.Value>
                <Image Source="pack://application:,,,/Icons/back.png" Stretch="None" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="pauseButtonStyle" BasedOn="{StaticResource buttonStyle}" TargetType="{x:Type Button}">
        <Setter Property="Content">
            <Setter.Value>
                <Image Source="pack://application:,,,/Icons/pause.png" Stretch="None" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:PuzzleGridSquareControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:PuzzleGridSquareControl}">
                    <Grid x:Name="Body">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="MouseStates">
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation To="White" Storyboard.TargetName="outerBorderBrush" Storyboard.TargetProperty="Color" Duration="0:0:0.1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseNotOver">
                                    <Storyboard>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimation To="#FF0000" Storyboard.TargetName="borderBrush" Storyboard.TargetProperty="Color" Duration="0:0:0.250" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NotSelected">
                                    <Storyboard>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FillStates">
                                <VisualState x:Name="Unknown">
                                    <Storyboard>
                                        <ColorAnimation To="#FFAAAA" Storyboard.TargetName="backgroundBrush_firstGradientStop" Storyboard.TargetProperty="Color" Duration="0:0:0.1" />
                                        <ColorAnimation To="#FFAAAA" Storyboard.TargetName="backgroundBrush_lastGradientStop" Storyboard.TargetProperty="Color" Duration="0:0:0.1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Empty">
                                    <Storyboard>
                                        <ColorAnimation To="#CCCCCC" Storyboard.TargetName="backgroundBrush_firstGradientStop" Storyboard.TargetProperty="Color" Duration="0:0:0.1" />
                                        <ColorAnimation To="#CCCCCC" Storyboard.TargetName="backgroundBrush_lastGradientStop" Storyboard.TargetProperty="Color" Duration="0:0:0.1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Filled">
                                    <Storyboard>
                                        <ColorAnimation To="Black" Storyboard.TargetName="backgroundBrush_firstGradientStop" Storyboard.TargetProperty="Color" Duration="0:0:0.1" />
                                        <ColorAnimation To="Black" Storyboard.TargetName="backgroundBrush_lastGradientStop" Storyboard.TargetProperty="Color" Duration="0:0:0.1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="NoContents">
                                    <Storyboard>
                                        <ColorAnimation To="Red" Storyboard.TargetName="backgroundBrush_firstGradientStop" Storyboard.TargetProperty="Color" Duration="0:0:0.1" />
                                        <ColorAnimation To="Red" Storyboard.TargetName="backgroundBrush_lastGradientStop" Storyboard.TargetProperty="Color" Duration="0:0:0.1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="outerBorder" Padding="1" BorderThickness="1" Background="Transparent">
                            <Border.BorderBrush>
                                <SolidColorBrush x:Name="outerBorderBrush" Color="Black" />
                            </Border.BorderBrush>
                            <Border BorderThickness="1" Margin="1" CornerRadius="2">
                                <Border.BorderBrush>
                                    <SolidColorBrush x:Name="borderBrush" Color="Black" />
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush x:Name="backgroundBrush" StartPoint="0,0" EndPoint="0.3,0.3" Opacity="0.75">
                                        <GradientStop x:Name="backgroundBrush_firstGradientStop" Offset="0" Color="Transparent" />
                                        <GradientStop x:Name="backgroundBrush_middleGradientStop" Offset="0.5" Color="Transparent" />
                                        <GradientStop x:Name="backgroundBrush_lastGradientStop" Offset="1" Color="Transparent" />
                                    </LinearGradientBrush>
                                </Border.Background>

                                <TextBlock Text="{TemplateBinding Text}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" />
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Editing -->

    <Style x:Key="Editor_Constraints_Style" TargetType="{x:Type DockPanel}">
        <Setter Property="Background">
            <Setter.Value>
                <Binding Path="IsActive.Value">
                    <Binding.Converter>
                        <converters:BoolConverter>
                            <converters:BoolConverter.True>
                                <SolidColorBrush Color="#FFFFFF" />
                            </converters:BoolConverter.True>
                            <converters:BoolConverter.False>
                                <SolidColorBrush Color="#AAAAAA" />
                            </converters:BoolConverter.False>
                        </converters:BoolConverter>
                    </Binding.Converter>
                </Binding>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type local:EditorGridSquareControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:EditorGridSquareControl}">
                    <Grid x:Name="Body">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="MouseStates">
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation To="1.0" Storyboard.TargetName="borderBrush" Storyboard.TargetProperty="Opacity" Duration="0:0:0.100" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseNotOver">
                                    <Storyboard>
                                        <DoubleAnimation To="0.75" Storyboard.TargetName="borderBrush" Storyboard.TargetProperty="Opacity" Duration="0:0:0.250" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FillStates">
                                <VisualState x:Name="Empty">
                                    <Storyboard>
                                        <ColorAnimation To="#CCCCCC" Storyboard.TargetName="backgroundBrush_firstGradientStop" Storyboard.TargetProperty="Color" Duration="0:0:0.5" />
                                        <ColorAnimation To="#CCCCCC" Storyboard.TargetName="backgroundBrush_lastGradientStop" Storyboard.TargetProperty="Color" Duration="0:0:0.5" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Filled">
                                    <Storyboard>
                                        <ColorAnimation To="Black" Storyboard.TargetName="backgroundBrush_firstGradientStop" Storyboard.TargetProperty="Color" Duration="0:0:0.5" />
                                        <ColorAnimation To="Black" Storyboard.TargetName="backgroundBrush_lastGradientStop" Storyboard.TargetProperty="Color" Duration="0:0:0.5" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="AmbiguityStates">
                                <VisualState x:Name="Ambiguous">
                                    <Storyboard>
                                        <ColorAnimation To="Red" Storyboard.TargetName="borderBrush" Storyboard.TargetProperty="Color" Duration="0:0:0.100" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unambiguous">
                                    <Storyboard>
                                        <ColorAnimation To="Green" Storyboard.TargetName="borderBrush" Storyboard.TargetProperty="Color" Duration="0:0:0.100" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="UnknownAmbiguity">
                                    <Storyboard>
                                        <ColorAnimation To="Black" Storyboard.TargetName="borderBrush" Storyboard.TargetProperty="Color" Duration="0:0:0.100" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border BorderThickness="1" Margin="1" CornerRadius="2">
                            <Border.BorderBrush>
                                <SolidColorBrush x:Name="borderBrush" Color="Black" Opacity="0.75" />
                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush x:Name="backgroundBrush" StartPoint="0,0" EndPoint="0.3,0.3">
                                    <GradientStop x:Name="backgroundBrush_firstGradientStop" Offset="0" Color="Transparent" />
                                    <GradientStop x:Name="backgroundBrush_middleGradientStop" Offset="0.5" Color="Transparent" />
                                    <GradientStop x:Name="backgroundBrush_lastGradientStop" Offset="1" Color="Transparent" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
